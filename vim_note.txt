vim note


文档操作

    :e -- 重新加载当前文档。
    :e! -- 重新加载当前文档，并丢弃已做的改动。
    gf -- 打开以光标所在字符串为文件名的文件


缓冲区

    :buffers或:ls或:files 显示缓冲区列表。
    ctrl+^：在最近两个缓冲区间切换。
    :bn -- 下一个缓冲区。
    :bp -- 上一个缓冲区。
    :bl -- 最后一个缓冲区。
    :b[n]或:[n]b -- 切换到第n个缓冲区。
    :nbw(ipeout) -- 彻底删除第n个缓冲区。
    :nbd(elete) -- 删除第n个缓冲区，并未真正删除，还在unlisted列表中
    :bd 关闭当前buffer不会退出vim


光标的移动

    w: 前移一个单词，光标停在下一个单词开头；
    W: 移动下一个单词开头，但忽略一些标点；
    e: 前移一个单词，光标停在下一个单词末尾；
    E: 移动到下一个单词末尾，如果词尾有标点，则移动到标点；
    b: 后移一个单词，光标停在上一个单词开头；
    B: 移动到上一个单词开头，忽略一些标点；



光标跳转

    (: 前移1句。
    ): 后移1句。
    {: 前移1段。
    }: 后移1段。
    %: 不仅能移动到匹配的(),{}或[]上，而且能在#if，#else， #endif之间跳跃。


    0: 移动到行首。
    $: 移动到行尾。
    ^: 移动到本行第一个非空白字符。

    g0: 移到光标所在屏幕行行首。
    g$: 移动光标所在屏幕行行尾。

    n|: 把光标移到递n列上。

    nG: 到文件第n行。
    n<cr> 下移n行
    :n<cr> 移动到第n行。
    :$<cr> 移动到最后一行。
    gg: 到文件头部。
    G: 到文件尾部。

    H: 把光标移到屏幕最顶端一行。
    M: 把光标移到屏幕中间一行。
    L: 把光标移到屏幕最底端一行。

    C-i  光标回到上一处
    C-o  光标回到下一处



搜索

    fc: 把光标移到同一行的下一个c字符处
    Fc: 把光标移到同一行的上一个c字符处
    tc: 把光标移到同一行的下一个c字符前
    Tc: 把光标移到同一行的上一个c字符后
    ;: 配合f & t使用，重复一次
    ,: 配合f & t使用，反向重复一次
    *: 向下搜索光标所在词。
    g*: 同上，但部分符合即可。


翻屏

    C-f: 下翻一屏。
    C-b: 上翻一屏。
    C-d: 下翻半屏。
    C-u: 上翻半屏。
    C-e: 向下滚动一行。
    C-y: 向上滚动一行。
    n%: 到文件n%的位置。
    zz: 将当前行移动到屏幕中央。
    zt: 将当前行移动到屏幕顶端。
    zb: 将当前行移动到屏幕底端。




插入文本

    :r filename在当前位置插入另一个文件的内容。
    :r !command可以将其它shell命令的输出插入当前文档。



列块模式

    C-v  进入列模式，I进入插入模式，$a光标移动到行尾进入插入模式


行排序

    C-v 可视模式下，:sort i 可对选中行进行排序，其中i是忽略大小写



文本对象

    aw：一个词
    as：一句。
    ap：一段。
    ab：一块（包含在圆括号中的）。



替换

    :s/old/new/g - 用new替换当前行所有的old。
    :%s/old/new/g - 用new替换文件中所有的old。
    :%s/^/xxx/g - 在每一行的行首插入xxx，^表示行首。
    :%s/$/xxx/g - 在每一行的行尾插入xxx，$表示行尾。所有替换命令末尾加上c，每个替换都将需要用户确认。 如：%s/old/new/gc，加上i则忽略大小写(ignore)。

    还有一种比替换更灵活的方式，它是匹配到某个模式后执行某种命令，
    语法为 :[range]g/pattern/command
    例如 :%g/^ xyz/normal dd。
    表示对于以一个空格和xyz开头的行执行normal模式下的dd命令。
    关于range的规定为：

    如果不指定range，则表示当前行。
    m,n: 从m行到n行。
    0: 最开始一行（可能是这样）。
    $: 最后一行
    .: 当前行
    %: 所有行



撤消与重做（normal模式）

    [n] u: 取消一(n)个改动。
    :undo 5 -- 撤销5个改变。



宏

    . --重复上一个编辑动作
    qa：开始录制宏a（键盘操作记录）
    q：停止录制



文件的编码

    :e ++enc=utf8 filename, 让vim用utf-8的编码打开这个文件。
    :w ++enc=gbk，不管当前文件什么编码，把它转存成gbk编码。
    :set fenc或:set fileencoding，查看当前文件的编码。
    在vimrc中添加set fileencoding=ucs-bom,utf-8,cp936，vim会根据要打开的文件选择合适的编码。 注意：编码之间不要留空格。 cp936对应于gbk编码。 ucs-bom对应于windows下的文件格式。




自动补全

    C-x C-n -- 按缓冲区中出现过的关键字补全。 直接按C-n或C-p即可。
    C-x C-p 和C-x C-n -- 用文档中出现过的单词补全当前的词。 直接按C-p和C-n也可以。
    C-x C-l -- 整行补全。
    C-x C-f -- 自动补全文件路径。弹出菜单后，按C-f循环选择，当然也可以按 C-n和C-p。

    C-x C-v -- 补全vim选项和命令。



折叠

    zf -- 创建折叠的命令，可以在一个可视区域上使用该命令；
    zd -- 删除当前行的折叠；
    zD -- 删除当前行的折叠；
    zfap -- 折叠光标所在的段；（ap是文本对象“一段”）
    zo -- 打开折叠的文本；
    zc -- 收起折叠；
    za -- 打开/关闭当前折叠；
    zr -- 打开嵌套的折行；
    zm -- 收起嵌套的折行；
    zR (zO) -- 打开所有折行；
    zM (zC) -- 收起所有折行；
    zj -- 跳到下一个折叠处；
    zk -- 跳到上一个折叠处；
    zi -- enable/disable fold;




命令行模式下的快捷键：

    上下方向键：上一条或者下一条命令。如果已经输入了部分命令，则找上一 条或者下一条匹配的命令。
    左右方向键：左/右移一个字符。
    C-w： 向前删除一个单词。
    C-h： 向前删除一个字符，等同于Backspace。
    C-u： 从当前位置移动到命令行开头。（删除到行首？）
    C-b： 移动到命令行开头。（光标左移一个字符?）
    Alt+b:光标前移一个词。
    C-e： 移动到命令行末尾。
    C-a:  光标移到行首。
    Shift-Left： 左移一个单词。
    Shift-Right： 右移一个单词。



工作目录(文件名补全的时候比较常用)

    :pwd 显示vim的工作目录。
    :cd path 改变vim的工作目录。
    :set autochdir 可以让vim 根据编辑的文件自动切换工作目录。


